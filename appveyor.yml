# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows
# https://ci.appveyor.com/project/fabianp/lightning-bpc6r
environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\build_tools\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.8"
      PYTHON_ARCH: "64"
      MINICONDA: "C:\\Miniconda-x64"

install:
  # Miniconda is pre-installed in the worker build
  - "SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
  - "python -m pip install -U pip"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - "pip --version"

  # Remove cygwin because it clashes with conda
  # see http://help.appveyor.com/discussions/problems/3712-git-remote-https-seems-to-be-broken
  - rmdir C:\\cygwin /s /q

  # Install the gls (Gnu Standard Library for windows)
  - git clone -q --branch=master https://github.com/casotto/gsl.git C:\projects\gsl
  - cd ..
  - cd gsl
  - cmake .
  - msbuild /m GSL.sln
  - cd ..
  - cd gfl

  # Install the build and runtime dependencies of the project.
  - conda install --quiet --yes numpy scipy cython networkx wheel conda-build"
  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
  - ps: "ls dist"
  # build the conda package
#  - "%CMD_IN_ENV% conda build build_tools/conda-recipe --quiet"

  # Move the conda package into the dist directory, to register it
  # as an "artifact" for Appveyor. cmd.exe does't have good globbing, so
  # we'll use a simple python script.
#  - python build_tools/move-conda-package.py build_tools/conda-recipe

  # Install the generated wheel package to test it
 # - "pip install --pre --no-index --find-links dist/ CythonGSL"

# Not a .NET project, we build scikit-learn in the install step instead
build: false

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "mkdir empty_folder"
  - "cd empty_folder"

# avoid to run nosetests
#  - "python -c \"import nose; nose.main()\" -s -v lightning"

  # Move back to the project folder
  - "cd .."

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
